import java.awt.Color;
import java.util.ArrayList;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
/**
 * @author JasonDeutsch
 */
public class LoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public LoginFrame() {
        initComponents();
    }
    
    /**
     * Creates new form Login with LoginName and Password from
     * the create new user frame
     * @param ln
     * @param pwd 
     */
    public LoginFrame(String ln, String pwd) {
        initComponents();
        txtLoginName.setText(ln);
        txtPassword.setText(pwd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        lblLoginInfo = new javax.swing.JLabel();
        txtLoginName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblLoginName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        txtStatusBar = new javax.swing.JTextField();
        btnCreateUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);

        lblLoginInfo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblLoginInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginInfo.setText("Enter Login Info");
        lblLoginInfo.setToolTipText("");

        txtLoginName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtLoginName.setToolTipText("Please enter your login user name");
        txtLoginName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLoginNameKeyPressed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPassword.setToolTipText("Please enter you password");
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        lblLoginName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblLoginName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLoginName.setText("Login Name:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtLoginName, org.jdesktop.beansbinding.ObjectProperty.create(), lblLoginName, org.jdesktop.beansbinding.BeanProperty.create("labelFor"));
        bindingGroup.addBinding(binding);

        lblPassword.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPassword.setText("Password:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtPassword, org.jdesktop.beansbinding.ObjectProperty.create(), lblPassword, org.jdesktop.beansbinding.BeanProperty.create("labelFor"));
        bindingGroup.addBinding(binding);

        btnLogin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.setToolTipText("Click to submit your login info and proceed to your budget");
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtStatusBar.setEditable(false);
        txtStatusBar.setBackground(java.awt.Color.lightGray);
        txtStatusBar.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        txtStatusBar.setText("Welcome!");

        btnCreateUser.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCreateUser.setText("Create User");
        btnCreateUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateUserMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtStatusBar)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblLoginName, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblLoginInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLoginName)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 105, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreateUser)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(lblLoginInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoginName)
                    .addComponent(lblLoginName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Verifies login information and takes user to the budget page if pass
     * @param evt 
     */
    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        int UID = 0; //user id returned by returnUID method
        
        //Verify the login and password fields aren't empty
        if (txtLoginName.getText().isEmpty()) {
            txtStatusBar.setText("User Name is empty");
            txtStatusBar.setBackground(Color.red);
            txtStatusBar.repaint();
            return;
        }
        else if(txtPassword.getText().isEmpty()){
            txtStatusBar.setText("Password is empty");
            txtStatusBar.setBackground(Color.red);
            txtStatusBar.repaint();
            return;
        }
        else {
            txtStatusBar.setBackground(Color.lightGray);
            txtStatusBar.repaint();
        }
        
        //Find user in database
        try {
            UID = returnUID(txtLoginName.getText(), txtPassword.getText());
        } catch (Exception ex){
            ex.printStackTrace();
            txtStatusBar.setText("ERROR: "+ex.toString());
            txtStatusBar.setBackground(Color.red);
            txtStatusBar.repaint();
        }
        
        //Verify the user exists
        //If user doesn't exist, then update status bar and stay on login screen
        if (UID==0){
            txtStatusBar.setText("User does NOT exist");
            txtStatusBar.setBackground(Color.red);
            txtStatusBar.repaint();
        }
        else{
            BudgetFrame SimpleFrame = new BudgetFrame(UID);
            SimpleFrame.setVisible(true);
            this.dispose();
        } 
    }//GEN-LAST:event_btnLoginMouseClicked

    /**
     * Open CreateNewUserFrame
     * Feed the entered user name to the new frame
     * @param evt 
     */
    private void btnCreateUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateUserMouseClicked
        CreateNewUserFrame newUser = new CreateNewUserFrame();
        newUser.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCreateUserMouseClicked

    /**
     * Prevent user from entering more than the SQL table allows (20 chars)
     * @param evt 
     */
    private void txtLoginNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoginNameKeyPressed
        if (txtLoginName.getText().length()>19){
            txtLoginName.setText(txtLoginName.getText().substring(1,20));
        }
    }//GEN-LAST:event_txtLoginNameKeyPressed

    /**
     * Prevent user from entering more than the SQL table allows (20 chars)
     * @param evt 
     */
    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if (txtPassword.getText().length()>19){
            txtPassword.setText(txtPassword.getText().substring(1,20));
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    /**
     * 
     * @param UN
     * @param PWD
     * @return
     * @throws IOException
     * @throws SQLException
     * @throws ClassNotFoundException 
     */
    public int returnUID(String UN, String PWD) throws IOException, 
		SQLException, ClassNotFoundException {
        //Read UID from Users table
        int userid = 0;
        String sql = "SELECT UserID FROM Users "
                        + "WHERE LoginName='"+UN+"' "
                        + "AND Password='"+PWD+"'";
        Connection conn = SimpleDataSource.getConnection();
        PreparedStatement stat = conn.prepareStatement(sql);
	ResultSet rs = stat.executeQuery();
	while (rs.next()){
            userid = rs.getInt("USERID");
	}
	return userid;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel lblLoginInfo;
    private javax.swing.JLabel lblLoginName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtLoginName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtStatusBar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
